@using HexaMazeRetreat.Blazor.Helpers
@using HexaMazeRetreat.Domain.Contracts

@page "/"
@inject PlaysHelper _playsHelper

<h1>Involved HexaMazeRetreat 15 oktober 2021</h1>

<p>Welkom op de Involved HexaMazeRetreat! Een variatie op onze oude MazeRetreat waarbij je een algoritme moet schrijven om de kortste route in een doolhof te bepalen.</p>
<p>Check out the source code for more information: <a href="https://github.com/Djohnnie/Involved-CodeRetreat-2021-HexaMazeRetreat" target="_blank">Djohnnie/Involved-CodeRetreat-2021-HexaMazeRetreat</a></p>
<p>Gebruik Swagger om de API aan te spreken: <a href="swagger" target="_blank">Swagger</a></p>

@if (_getPlayersResponse == null)
{
    <p><em>Bezig met laden van data...</em></p>
}
else if (_getPlayersResponse.Count == 0)
{
    <p><em>Nog geen spelers hebben een level gespeeld!</em></p>
}
else
{
    <p>
        @foreach (var player in _getPlayersResponse)
        {
            var cssClass = $"solutionColor{player.Index}";
            <span class="@cssClass"> [ @player.PlayerName ] </span>
        }
    </p>
}

<div class="center">
    <img src="img/directions-guide.png" />
</div>

<div>
    <img src="_api/images/level-0" />
</div>

@code
{
    private GetPlayersResponse _getPlayersResponse;

    protected override async Task OnInitializedAsync()
    {
        _getPlayersResponse = await _playsHelper.GetPlayers();
    }
}